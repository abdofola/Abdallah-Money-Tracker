generator client {
  provider = "prisma-client-js"
}

generator pothos {
  provider = "prisma-pothos-types"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  name         String?
  email        String        @unique
  last_login   DateTime?
  currencies   Currency[]
  transactions Transaction[]
  categories   Category[]
  role         Role          @default(USER)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Currency {
  id           String        @id @default(uuid())
  name         String
  transactions Transaction[]
  user         User?         @relation(fields: [userId], references: [id])
  userId       String
}

model Transaction {
  id         String    @id @default(uuid())
  userId     String
  amount     Float
  date       DateTime
  comment    String?
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId String
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  currency   Currency? @relation(fields: [currencyId], references: [id])
  currencyId String
}

model Category {
  id           String        @id @default(uuid())
  type         Type
  name         Json
  color        String
  iconId       String
  userId       String
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  User         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Type {
  income
  expenses
}

enum Role {
  ADMIN
  USER
}
